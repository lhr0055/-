{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: []\n};\nexport const shoppingCartSlice = createSlice({\n  name: \"cartItems\",\n  initialState: initialState,\n  reducers: {\n    setShoppingCart: (state, action) => {\n      state.cartItems = action.payload;\n    },\n    updateQuantity: (state, action) => {\n      var _state$cartItems;\n      state.cartItems = (_state$cartItems = state.cartItems) === null || _state$cartItems === void 0 ? void 0 : _state$cartItems.map(item => {\n        if (item.id === action.payload.cartItems.id) {\n          item.quantity = action.payload.quantity;\n        }\n        return item;\n      });\n    },\n    removeFromCart: (state, action) => {\n      var _state$cartItems2;\n      state.cartItems = (_state$cartItems2 = state.cartItems) === null || _state$cartItems2 === void 0 ? void 0 : _state$cartItems2.filter(item => {\n        if (item.id === action.payload.cartItems.id) {\n          item.quantity = action.payload.quantity;\n        }\n        return item;\n      });\n    }\n  }\n});\nexport const {\n  setShoppingCart\n} = shoppingCartSlice.actions;\nexport const shoppingCartReducer = shoppingCartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","shoppingCartSlice","name","reducers","setShoppingCart","state","action","payload","updateQuantity","_state$cartItems","map","item","id","quantity","removeFromCart","_state$cartItems2","filter","actions","shoppingCartReducer","reducer"],"sources":["/Users/daeunchung/Downloads/GGB-main/kimchi/src/Storage/Redux/shoppingCartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {shoppingCartModel} from \"../../Interfaces\";\n\n\nconst initialState: shoppingCartModel= {\n    cartItems: [],\n};\n\n\nexport const shoppingCartSlice = createSlice({\n    name: \"cartItems\",\n    initialState: initialState,\n    reducers: {\n        setShoppingCart: (state, action) => {\n            state.cartItems = action.payload;\n        },\n        updateQuantity: (state,action) => {\n            state.cartItems = state.cartItems?.map((item) => {\n                if(item.id === action.payload.cartItems.id) {\n                    item.quantity = action.payload.quantity;\n                }\n                return item;\n            });\n        },\n        removeFromCart: (state,action) => {\n            state.cartItems = state.cartItems?.filter((item) => {\n                if(item.id === action.payload.cartItems.id) {\n                    item.quantity = action.payload.quantity;\n                }\n                return item;\n            });\n        },\n    },\n});\n\nexport const { setShoppingCart } = shoppingCartSlice.actions;\nexport const shoppingCartReducer = shoppingCartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,MAAMC,YAA+B,GAAE;EACnCC,SAAS,EAAE;AACf,CAAC;AAGD,OAAO,MAAMC,iBAAiB,GAAGH,WAAW,CAAC;EACzCI,IAAI,EAAE,WAAW;EACjBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,cAAc,EAAEA,CAACH,KAAK,EAACC,MAAM,KAAK;MAAA,IAAAG,gBAAA;MAC9BJ,KAAK,CAACL,SAAS,IAAAS,gBAAA,GAAGJ,KAAK,CAACL,SAAS,cAAAS,gBAAA,uBAAfA,gBAAA,CAAiBC,GAAG,CAAEC,IAAI,IAAK;QAC7C,IAAGA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACP,SAAS,CAACY,EAAE,EAAE;UACxCD,IAAI,CAACE,QAAQ,GAAGP,MAAM,CAACC,OAAO,CAACM,QAAQ;QAC3C;QACA,OAAOF,IAAI;MACf,CAAC,CAAC;IACN,CAAC;IACDG,cAAc,EAAEA,CAACT,KAAK,EAACC,MAAM,KAAK;MAAA,IAAAS,iBAAA;MAC9BV,KAAK,CAACL,SAAS,IAAAe,iBAAA,GAAGV,KAAK,CAACL,SAAS,cAAAe,iBAAA,uBAAfA,iBAAA,CAAiBC,MAAM,CAAEL,IAAI,IAAK;QAChD,IAAGA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACP,SAAS,CAACY,EAAE,EAAE;UACxCD,IAAI,CAACE,QAAQ,GAAGP,MAAM,CAACC,OAAO,CAACM,QAAQ;QAC3C;QACA,OAAOF,IAAI;MACf,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP;AAAgB,CAAC,GAAGH,iBAAiB,CAACgB,OAAO;AAC5D,OAAO,MAAMC,mBAAmB,GAAGjB,iBAAiB,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}