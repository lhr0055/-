{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst shoppingCartApi = createApi({\n  reducerPath: \"shoppingCartApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://redmangoapi.azurewebsites.net/api/\"\n  }),\n  tagTypes: [\"ShoppingCarts\"],\n  endpoints: builder => ({\n    getShoppingCart: builder.query({\n      query: userId => ({\n        url: `shoppingcart`,\n        params: {\n          userId: userId\n        }\n      }),\n      providesTags: [\"ShoppingCarts\"]\n    }),\n    updateShoppingCart: builder.mutation({\n      query: ({\n        menuItemId,\n        updateQuantityBy,\n        userId\n      }) => ({\n        url: \"shoppingcart\",\n        method: \"POST\",\n        params: {\n          menuItemId: updateQuantityBy,\n          userId\n        }\n      })\n    })\n  })\n});\nexport const {\n  useGetShoppingCartQuery\n} = shoppingCartApi;\nexport default shoppingCartApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","shoppingCartApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getShoppingCart","query","userId","url","params","providesTags","updateShoppingCart","mutation","menuItemId","updateQuantityBy","method","useGetShoppingCartQuery"],"sources":["/Users/daeunchung/Downloads/GGB-main/kimchi/src/Apis/shoppingCartApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\n\nconst shoppingCartApi = createApi({\n    reducerPath: \"shoppingCartApi\",\n    baseQuery: fetchBaseQuery({\n        baseUrl:\"https://redmangoapi.azurewebsites.net/api/\"\n    }),\n    tagTypes: [\"ShoppingCarts\"],\n    endpoints: (builder) => ({\n\n        getShoppingCart : builder.query({\n            query: (userId) => ({\n                url: `shoppingcart`,\n                params: {\n                    userId:userId\n                }\n            }),\n            providesTags:[\"ShoppingCarts\"]\n        }),\n        updateShoppingCart : builder.mutation({\n            query: ({menuItemId, updateQuantityBy, userId}) => ({\n                url: \"shoppingcart\",\n                method: \"POST\",\n                params: {\n                    menuItemId : \n                    updateQuantityBy,\n                    userId,\n                }\n            })\n        })\n    }),\n});\n\nexport  const {useGetShoppingCartQuery} = shoppingCartApi;\nexport default shoppingCartApi;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEvE,MAAMC,eAAe,GAAGF,SAAS,CAAC;EAC9BG,WAAW,EAAE,iBAAiB;EAC9BC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAC;EACZ,CAAC,CAAC;EACFC,QAAQ,EAAE,CAAC,eAAe,CAAC;EAC3BC,SAAS,EAAGC,OAAO,KAAM;IAErBC,eAAe,EAAGD,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAGC,MAAM,KAAM;QAChBC,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE;UACJF,MAAM,EAACA;QACX;MACJ,CAAC,CAAC;MACFG,YAAY,EAAC,CAAC,eAAe;IACjC,CAAC,CAAC;IACFC,kBAAkB,EAAGP,OAAO,CAACQ,QAAQ,CAAC;MAClCN,KAAK,EAAEA,CAAC;QAACO,UAAU;QAAEC,gBAAgB;QAAEP;MAAM,CAAC,MAAM;QAChDC,GAAG,EAAE,cAAc;QACnBO,MAAM,EAAE,MAAM;QACdN,MAAM,EAAE;UACJI,UAAU,EACVC,gBAAgB;UAChBP;QACJ;MACJ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAQ,MAAM;EAACS;AAAuB,CAAC,GAAGlB,eAAe;AACzD,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}